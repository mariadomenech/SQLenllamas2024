/*CREACIÓN ESQUEMA Y TABLAS TEMPORALES*/
CREATE DATABASE SQL_EN_LLAMAS_FNM CLONE SQL_EN_LLAMAS;

CREATE SCHEMA SQL_EN_LLAMAS_FNM.CASE02 CLONE SQL_EN_LLAMAS.CASE02;

CREATE TEMP TABLE CUSTOMER_ORDERS_SILVER AS 
SELECT 
    ORDER_ID,
    CUSTOMER_ID,
    PIZZA_ID,
    CASE
        WHEN TRIM(EXCLUSIONS) IN ('null','') THEN NULL
        ELSE EXCLUSIONS
    END AS EXCLUSIONS,
    CASE
        WHEN TRIM(EXTRAS) IN ('null','') THEN NULL
        ELSE EXTRAS
    END AS EXTRAS,
    ORDER_TIME
FROM CUSTOMER_ORDERS;

CREATE TEMP TABLE RUNNER_ORDERS_SILVER AS 
SELECT 
    ORDER_ID,
    RUNNER_ID,
    CASE
        WHEN TRIM(PICKUP_TIME) IN ('null') THEN NULL
        ELSE PICKUP_TIME
    END AS PICKUP_TIME,
    CASE
        WHEN TRIM(DISTANCE) IN ('null') THEN NULL
        ELSE DISTANCE
    END AS DISTANCE,
    CASE
        WHEN TRIM(DURATION) IN ('null') THEN NULL
        ELSE DURATION
    END AS DURATION,
    CASE
        WHEN TRIM(CANCELLATION) IN ('null','') THEN NULL
        ELSE CANCELLATION
    END AS CANCELLATION
FROM RUNNER_ORDERS;


/*DESARROLLO EJERCICIO DÍA 1*/
SELECT A.RUNNER_ID,
        A.NUMERO_PEDIDOS_COMPLETADOS,
        A.NUMERO_PIZZAS_ENTREGADAS,
        ROUND (CASE WHEN B.NUMERO_PEDIDOS_TOTAL = 0
		THEN 0 ELSE ((A.NUMERO_PEDIDOS_COMPLETADOS/B.NUMERO_PEDIDOS_TOTAL)*100) END,2)
		AS "% PEDIDOS CON ÉXITO",
        ROUND (CASE WHEN A.NUMERO_PIZZAS_ENTREGADAS = 0
		THEN 0 ELSE ((A.NUMERO_PIZZAS_ENTREGADAS_MOD/A.NUMERO_PIZZAS_ENTREGADAS)*100) END,2)
		AS "% PIZZAS ENTREGADAS MOD" 
FROM
(
SELECT RUNNERS.RUNNER_ID,
        COUNT(DISTINCT CUSTOMER_ORDERS_SILVER.ORDER_ID)
		AS NUMERO_PEDIDOS_COMPLETADOS,
        COUNT(CUSTOMER_ORDERS_SILVER.ORDER_ID)
		AS NUMERO_PIZZAS_ENTREGADAS,
        SUM(CASE WHEN EXCLUSIONS IS NOT NULL OR EXTRAS IS NOT NULL
		THEN 1 ELSE 0 END)
		AS NUMERO_PIZZAS_ENTREGADAS_MOD
FROM CUSTOMER_ORDERS_SILVER
RIGHT JOIN RUNNER_ORDERS_SILVER
ON CUSTOMER_ORDERS_SILVER.ORDER_ID = RUNNER_ORDERS_SILVER.ORDER_ID
RIGHT JOIN RUNNERS
ON RUNNER_ORDERS_SILVER.RUNNER_ID = RUNNERS.RUNNER_ID
WHERE RUNNER_ORDERS_SILVER.CANCELLATION IS NULL
GROUP BY RUNNERS.RUNNER_ID
)A INNER JOIN (
SELECT RUNNERS.RUNNER_ID,
        COUNT(DISTINCT CUSTOMER_ORDERS_SILVER.ORDER_ID)
		AS NUMERO_PEDIDOS_TOTAL,
        COUNT(CUSTOMER_ORDERS_SILVER.ORDER_ID)
		AS NUMERO_PIZZAS_TOTAL
FROM CUSTOMER_ORDERS_SILVER
RIGHT JOIN RUNNER_ORDERS_SILVER
ON CUSTOMER_ORDERS_SILVER.ORDER_ID = RUNNER_ORDERS_SILVER.ORDER_ID
RIGHT JOIN RUNNERS
ON RUNNER_ORDERS_SILVER.RUNNER_ID = RUNNERS.RUNNER_ID
GROUP BY RUNNERS.RUNNER_ID
) B
ON A.RUNNER_ID = B.RUNNER_ID


/*********************************************************/
/***************** COMENTARIO MARÍA *********************/
/*********************************************************/
/* 

Perfecto!

*/
