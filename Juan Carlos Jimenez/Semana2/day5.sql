--no tengo tiempo ðŸ˜¢ lo voy haciendo cuando tengo tiempo

--------DIA5----------
USE SQL_EN_LLAMAS;
USE SCHEMA CASE02;
SELECT * FROM CUSTOMER_ORDERS;
SELECT * FROM RUNNER_ORDERS;
SELECT * FROM RUNNERS;
SELECT * FROM PIZZA_NAMES;
SELECT * FROM PIZZA_RECIPES;
SELECT * FROM PIZZA_TOPPINGS;

WITH CUSTOMER_CLEAN AS (
SELECT C.ORDER_ID,
    CUSTOMER_ID,
    PIZZA_ID,
    CASE
        WHEN EXCLUSIONS IS NULL OR EXCLUSIONS IN ('','NULL') THEN NULL 
        WHEN EXCLUSIONS ='BEEF' THEN '3'
        ELSE EXCLUSIONS
    END AS EXCLUSIONS,
    CASE
        WHEN EXTRAS IS NULL OR EXTRAS IN ('','NULL') THEN NULL
        ELSE EXTRAS
    END AS EXTRAS,
    ORDER_TIME
    FROM CUSTOMER_ORDERS C
    LEFT JOIN RUNNER_ORDERS R
    ON R.ORDER_ID = C.ORDER_ID
    WHERE PICKUP_TIME <> 'NULL'
),

PIZZAS_ENTREGADAS AS (
    SELECT PIZZA_ID,
        RUNNER_ID,
        R.ORDER_ID
    FROM RUNNER_ORDERS R
    LEFT JOIN CUSTOMER_CLEAN C
    ON R.ORDER_ID = C.ORDER_ID
    WHERE PICKUP_TIME <> 'NULL'
),

TOPPINGS AS (
    SELECT DISTINCT B.ORDER_ID,
       A.PIZZA_ID,
       TOPPINGS,
       EXTRAS,
       EXCLUSIONS
    FROM PIZZA_RECIPES A
    LEFT JOIN CUSTOMER_CLEAN B
    ON A.PIZZA_ID = B.PIZZA_ID
    LEFT JOIN PIZZAS_ENTREGADAS C
    ON B.ORDER_ID = C.ORDER_ID
    ),
    --SELECT * FROM TOPPINS;  

SPL_TOP AS (
SELECT NULLIF(SPLIT_PART(TOPPINGS,',',1),'')::INT AS INGREDIENTE_1,
NULLIF(SPLIT_PART(TOPPINGS,',',2),'')::INT AS INGREDIENTE_2,
NULLIF(SPLIT_PART(TOPPINGS,',',3),'')::INT AS INGREDIENTE_3,
NULLIF(SPLIT_PART(TOPPINGS,',',4),'')::INT AS INGREDIENTE_4,
NULLIF(SPLIT_PART(TOPPINGS,',',5),'')::INT AS INGREDIENTE_5,
NULLIF(SPLIT_PART(TOPPINGS,',',6),'')::INT AS INGREDIENTE_6,
NULLIF(SPLIT_PART(TOPPINGS,',',7),'')::INT AS INGREDIENTE_7,
NULLIF(SPLIT_PART(TOPPINGS,',',8),'')::INT AS INGREDIENTE_8,
NULLIF(SPLIT_PART(EXTRAS,',',1),'')::INT AS EXTRA_1,
NULLIF(SPLIT_PART(EXTRAS,',',2),'')::INT AS EXTRA_2,
NULLIF(SPLIT_PART(EXCLUSIONS,',',1),'')::INT AS EXCLUSION_1,
NULLIF(SPLIT_PART(EXCLUSIONS,',',2),'')::INT AS EXCLUSION_2
FROM TOPPINGS
),
--SELECT * FROM SPL_TOP;
COUNT_TOPPINGS AS (
 SELECT
        INGREDIENTE
       ,COUNT(INGREDIENTE) AS FREC_ING
    FROM SPL_TOP
    UNPIVOT(INGREDIENTE
        FOR INGREDIENTE_ID
            IN (INGREDIENTE_1, INGREDIENTE_2, INGREDIENTE_3, INGREDIENTE_4, INGREDIENTE_5, INGREDIENTE_6, INGREDIENTE_7, INGREDIENTE_8, EXTRA_1, EXTRA_2))
    WHERE INGREDIENTE IS NOT NULL
    GROUP BY 1
),
EXC_TOPPINGS AS (
    SELECT EXCLUSIONS
        ,COUNT(EXCLUSIONS) AS FREC_EXC
    FROM SPL_TOP
    UNPIVOT (EXCLUSIONS 
        FOR INGREDIENTE_ID 
            IN (EXCLUSION_1,EXCLUSION_2))
    GROUP BY 1
    ),
TOTAL AS (
    SELECT INGREDIENTE, 
        FREC_ING-ZEROIFNULL(FREC_EXC) AS FREC_TOTAL
    FROM COUNT_TOPPINGS C
    LEFT JOIN EXC_TOPPINGS E
    ON C.INGREDIENTE = E.EXCLUSIONS
    ORDER BY FREC_TOTAL DESC
)
SELECT * FROM TOTAL;
