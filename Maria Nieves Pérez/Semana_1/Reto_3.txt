WITH primero AS (
    SELECT 
        s.customer_id, 
        CASE WHEN s.order_date = (MIN(s.order_date) OVER (PARTITION BY s.customer_id)) THEN m.product_name 
            ELSE NULL END AS primer_producto,
        s.order_date
    FROM SQL_EN_LLAMAS.CASE01.SALES s
        INNER JOIN SQL_EN_LLAMAS.CASE01.MENU m 
            ON s.product_id=m.product_id 
    ORDER BY primer_producto
),

segundo AS (
    SELECT 
        me.customer_id,
        p.order_date,
        primer_producto
    FROM primero p
        RIGHT JOIN SQL_EN_LLAMAS.CASE01.MEMBERS me 
            ON p.customer_id=me.customer_id 
    WHERE primer_producto IS NOT NULL OR p.order_date IS NULL
)

SELECT 
    customer_id, 
    COALESCE(order_date::varchar(10),'No hay producto'),
    CASE WHEN primer_producto IS NULL THEN 'No hay producto'
        ELSE primer_producto END AS primer_producto
FROM segundo;


/*********************************/
/***** COMENTARIO JUAN PEDRO *****/
/*********************************/
/*
¡Todo correcto enhorabuena! pero un par de matices, me ha gustado mucho el usar el with (tal vez la segunda tabla del with se podría omitir en favor de un código
más corto pues no hace tanta falta esa tabla. Y aunque el resultado es correcto tal vez hubiera sido mejor mostrar a cada cliente en una sola fila con ayuda de 
la función LISTAGG. Caulquier cosa que necesites no dudes en contactar.
*/
