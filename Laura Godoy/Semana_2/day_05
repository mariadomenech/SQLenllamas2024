--SIN EL UNPIVOT--


with A as (
SELECT pizza_id,  C.value::string AS toppings_separated
FROM pizza_recipes,
     LATERAL FLATTEN(input=>split(toppings, ',')) C
     ),
B as (
SELECT pizza_id,order_id, C.value::string AS extras_separated
FROM customer_orders,
     LATERAL FLATTEN(input=>split(extras, ',')) C
),
B1 as (
select pizza_id,order_id, replace(extras_separated, 'null', '') as extras_separated
from B
),
C as (
SELECT pizza_id, C.value::string AS exclusions_separated
FROM customer_orders,
     LATERAL FLATTEN(input=>split(exclusions, ',')) C
),
C1 as (
select pizza_id, replace(exclusions_separated, 'beef','3') as exclusions_separated
from C
),
C2 as (
select pizza_id, replace(exclusions_separated, 'null', '') as exclusions_separated
from C1
),
D as (
select C2.pizza_id, extras_separated, exclusions_separated, toppings_separated 
from C2
left join B1
on C2.pizza_id=B1.pizza_id
left join A
on C2.pizza_id=A.pizza_id
left join runner_orders
on B1.order_id=runner_orders.order_id
where pickup_time<>'null'
)

select
    toppings_separated,
    count(extras_separated)-count(exclusions_separated)+count(toppings_separated) as total_veces_usado
from D
group by toppings_separated


/*********************************************************/
/***************** COMENTARIO MARÍA *********************/
/*********************************************************/
/* 

Hola Laura, el conteo de ingredientes no tiene sentido no te parece que 110 ingredientes de cada es demasiado habiendo solo 14 pizzas 
(teniendo en cuenta inlcuso las canecladas). Como vamos a revisarlo en conjunto en una sesión este ejericicio, te dejo por aquí mi solución y lo vemos
luego todos juntos explicado.


*/

/* --SOLUCION MARIA

DROP TABLE IF EXISTS PEDIDOS_ENTREGADOS_DETALLE;

CREATE TEMPORARY TABLE PEDIDOS_ENTREGADOS_DETALLE AS
SELECT A.ORDER_ID
	,B.PIZZA_ID
	,CASE 
		WHEN UPPER(EXCLUSIONS) = 'NULL'
			OR EXCLUSIONS = ''
			THEN NULL
		WHEN UPPER(EXCLUSIONS) = 'BEEF'
			THEN '3'
		ELSE EXCLUSIONS
		END AS EXCLUSIONS_MOD
	,CASE 
		WHEN UPPER(EXTRAS) = 'NULL'
			OR EXTRAS = ''
			THEN NULL
		ELSE EXTRAS
		END AS EXTRAS_MOD
FROM RUNNER_ORDERS A
INNER JOIN CUSTOMER_ORDERS B ON A.ORDER_ID = B.ORDER_ID
	AND UPPER(A.PICKUP_TIME) != 'NULL';

WITH INGREDIENTES
AS (
	SELECT PIZZA_ID
		,SPLIT(TOPPINGS, ', ') AS SPLIT
		,SPLIT [0]::INT AS INGREDIENTE_1
		,SPLIT [1]::INT AS INGREDIENTE_2
		,SPLIT [2]::INT AS INGREDIENTE_3
		,SPLIT [3]::INT AS INGREDIENTE_4
		,SPLIT [4]::INT AS INGREDIENTE_5
		,SPLIT [5]::INT AS INGREDIENTE_6
		,SPLIT [6]::INT AS INGREDIENTE_7
		,SPLIT [7]::INT AS INGREDIENTE_8
	FROM PIZZA_RECIPES
	)
,NUM_INGREDIENTES_RECETA AS (
	SELECT C.TOPPING_NAME
		,COUNT(*) AS NUM_INGREDIENTES
	FROM PEDIDOS_ENTREGADOS_DETALLE A
	INNER JOIN INGREDIENTES
	UNPIVOT(INGREDIENTE FOR NUM_INGREDIENTES IN (
				INGREDIENTE_1
				,INGREDIENTE_2
				,INGREDIENTE_3
				,INGREDIENTE_4
				,INGREDIENTE_5
				,INGREDIENTE_6
				,INGREDIENTE_7
				,INGREDIENTE_8
				)) B ON A.PIZZA_ID = B.PIZZA_ID
	RIGHT JOIN PIZZA_TOPPINGS C ON B.INGREDIENTE = C.TOPPING_ID
	GROUP BY C.TOPPING_NAME
	)
,INGREDIENTES_MOD1 AS (
	SELECT ORDER_ID
		,PIZZA_ID
		,EXCLUSIONS_MOD
		,SPLIT(EXCLUSIONS_MOD, ', ') AS SPLIT_EXCLUSIONS
		,IFNULL(SPLIT_EXCLUSIONS [0]::INT, 0) AS INGREDIENTE_1_EX
		,IFNULL(SPLIT_EXCLUSIONS [1]::INT, 0) AS INGREDIENTE_2_EX
	FROM PEDIDOS_ENTREGADOS_DETALLE
	)
,NUM_INGREDIENTES_EXCLUIDOS AS (
	SELECT B.TOPPING_NAME
		,COUNT(A.INGREDIENTE_EXCLUIDO) AS NUM_INGREDIENTES_EXCLUIDOS
	FROM INGREDIENTES_MOD1
	UNPIVOT(INGREDIENTE_EXCLUIDO FOR NUM_INGREDIENTES IN (
				INGREDIENTE_1_EX
				,INGREDIENTE_2_EX
				)) A
	INNER JOIN PIZZA_TOPPINGS B ON A.INGREDIENTE_EXCLUIDO = B.TOPPING_ID
	GROUP BY B.TOPPING_NAME
	)
,INGREDIENTES_MOD2 AS (
	SELECT ORDER_ID
		,PIZZA_ID
		,SPLIT(EXTRAS_MOD, ', ') AS SPLIT_INCLUSION
		,IFNULL(SPLIT_INCLUSION [0]::INT, 0) AS INGREDIENTE_1_IN
		,IFNULL(SPLIT_INCLUSION [1]::INT, 0) AS INGREDIENTE_2_IN
	FROM PEDIDOS_ENTREGADOS_DETALLE
	)
,NUM_INGREDIENTES_INCLUIDO AS (
	SELECT B.TOPPING_NAME
		,COUNT(A.INGREDIENTE_INCLUIDO) AS NUM_INGREDIENTES_INCLUIDOS
	FROM INGREDIENTES_MOD2
	UNPIVOT(INGREDIENTE_INCLUIDO FOR NUM_INGREDIENTES2 IN (
				INGREDIENTE_1_IN
				,INGREDIENTE_2_IN
				)) A
	INNER JOIN PIZZA_TOPPINGS B ON A.INGREDIENTE_INCLUIDO = B.TOPPING_ID
	GROUP BY B.TOPPING_NAME
	)
SELECT DISTINCT RANKING
	,NUM_INGREDIENTES_GEN
	,LISTAGG(TOPPING_NAME, ', ') OVER (PARTITION BY RANKING,NUM_INGREDIENTES_GEN) AS INGREDIENTES
FROM (
	SELECT A.TOPPING_NAME
		,
		--A.NUM_INGREDIENTES NUM_INGREDIENTES_RECETA,
		--IFNULL(B.NUM_INGREDIENTES_INCLUIDOS,0) NUM_INGREDIENTES_INCLUIDOS,
		--IFNULL(C.NUM_INGREDIENTES_EXCLUIDOS,0) NUM_INGREDIENTES_EXCLUIDOS
		SUM(A.NUM_INGREDIENTES + IFNULL(B.NUM_INGREDIENTES_INCLUIDOS, 0) - IFNULL(C.NUM_INGREDIENTES_EXCLUIDOS, 0)) NUM_INGREDIENTES_GEN
		,RANK() OVER (ORDER BY NUM_INGREDIENTES_GEN DESC) RANKING
	FROM NUM_INGREDIENTES_RECETA A
	LEFT JOIN NUM_INGREDIENTES_INCLUIDO B ON A.TOPPING_NAME = B.TOPPING_NAME
	LEFT JOIN NUM_INGREDIENTES_EXCLUIDOS C ON A.TOPPING_NAME = C.TOPPING_NAME
	GROUP BY A.TOPPING_NAME
	)
ORDER BY RANKING ASC; */


