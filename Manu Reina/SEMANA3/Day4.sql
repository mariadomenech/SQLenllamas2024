CREATE OR REPLACE TEMPORARY TABLE ESPECIALIDAD_SQL_BRONZE_DB_MRA.RETO.MESES AS
    SELECT
      1 AS MONTH_NUMBER, 'ENERO' AS MONTH_NAME
    UNION ALL SELECT 2, 'FEBRERO'
    UNION ALL SELECT 3, 'MARZO'
    UNION ALL SELECT 4, 'ABRIL'
    UNION ALL SELECT 5, 'MAYO'
    UNION ALL SELECT 6, 'JUNIO'
    UNION ALL SELECT 7, 'JULIO'
    UNION ALL SELECT 8, 'AGOSTO'
    UNION ALL SELECT 9, 'SEPTIEMBRE'
    UNION ALL SELECT 10, 'OCTUBRE'
    UNION ALL SELECT 11, 'NOVIEMBRE'
    UNION ALL SELECT 12, 'DICIEMBRE';

CREATE OR REPLACE PROCEDURE SQL_EN_LLAMAS.CASE03.MRA_CALCULAR_COMPRAS_EVOLUCIONADO(id_cliente INTEGER, mes VARCHAR,tipo_calculo varchar)
RETURNS VARCHAR
LANGUAGE SQL
AS
DECLARE

    --BALANCE:= DEPOSITO - COMPRA - RETIROS
    BALANCE INT;
    TOTAL_DEPOSITADO INT;
    TOTAL_COMPRAS INT;
    TOTAL_RETIRADO INT;
    
BEGIN

    SELECT COALESCE(SUM(DEPOSITO),0) INTO TOTAL_DEPOSITADO
    FROM (
        SELECT 
            CUSTOMER_ID
           ,MONTH(TXN_DATE) AS MES
           ,M.MONTH_NAME
           ,TXN_AMOUNT AS DEPOSITO
        FROM CUSTOMER_TRANSACTIONS CT
        LEFT JOIN  ESPECIALIDAD_SQL_BRONZE_DB_MRA.RETO.MESES M
               ON MONTH(CT.TXN_DATE) = M.MONTH_NUMBER
        WHERE CT.TXN_TYPE = 'deposit'
        AND CUSTOMER_ID = :id_cliente
        AND MONTH_NAME = :mes
    );

    SELECT COALESCE(SUM(RETIRO),0) INTO TOTAL_RETIRADO
    FROM (
        SELECT 
            CUSTOMER_ID
           ,MONTH(TXN_DATE) AS MES
           ,M.MONTH_NAME
           ,TXN_AMOUNT AS RETIRO
        FROM CUSTOMER_TRANSACTIONS CT
        LEFT JOIN  ESPECIALIDAD_SQL_BRONZE_DB_MRA.RETO.MESES M
               ON MONTH(CT.TXN_DATE) = M.MONTH_NUMBER
        WHERE CT.TXN_TYPE = 'withdrawal'
        AND CUSTOMER_ID = :id_cliente
        AND MONTH_NAME = :mes
    );

    SELECT COALESCE(SUM(GASTO_CLIENTE),0) INTO TOTAL_COMPRAS
    FROM (
        SELECT 
            CUSTOMER_ID
           ,MONTH(TXN_DATE) AS MES
           ,M.MONTH_NAME
           ,TXN_AMOUNT AS GASTO_CLIENTE
        FROM CUSTOMER_TRANSACTIONS CT
        LEFT JOIN  ESPECIALIDAD_SQL_BRONZE_DB_MRA.RETO.MESES M
               ON MONTH(CT.TXN_DATE) = M.MONTH_NUMBER
        WHERE CT.TXN_TYPE = 'purchase'
        AND CUSTOMER_ID = :id_cliente
        AND MONTH_NAME = :mes
    );

    BALANCE := (TOTAL_DEPOSITADO - TOTAL_COMPRAS - TOTAL_RETIRADO);

    IF (UPPER(TRIM(:tipo_calculo)) = 'BALANCE')
        THEN RETURN 'EL BALANCE ASOCIADO AL CLIENTE ' ||:id_cliente|| ' EN EL MES DE ' ||:mes|| ' ES DE ' ||:BALANCE|| ' EUR.';
        
    ELSEIF (UPPER(TRIM(:tipo_calculo)) = 'TOTALCOMPRAS')
        THEN RETURN  'EL IMPORTE TOTAL DE LA COMPRA DEL CLIENTE ' ||:id_cliente|| ' EN EL MES DE ' ||:mes|| ' ASCIENDE A' ||:TOTAL_COMPRAS|| '.';

    ELSEIF (UPPER(TRIM(:tipo_calculo)) = 'TOTALDEPOSITADO')
        THEN RETURN 'EL CLIENTE ' ||:id_cliente|| ' HA DEPOSITADO ' ||:TOTAL_DEPOSITADO|| ' EUR EN EL MES DE ' ||:mes|| '.';

    ELSEIF (UPPER(TRIM(:tipo_calculo)) = 'TOTALRETIRADO')
        THEN RETURN  'EL CLIENTE ' ||:id_cliente|| ' HA RETIRADO ' ||:TOTAL_RETIRADO|| ' EUR EN EL MES DE ' ||:mes|| '.';
        
    ELSE
        RETURN 'NO ES POSIBLE DEVOLVER ESTE TIPO DE C√ÅLCULO';
    END IF;

END;

-- EJEMPLO PARA EL CLIENTE 1 Y EL MES DE MARZO--
CALL SQL_EN_LLAMAS.CASE03.MRA_CALCULAR_COMPRAS_EVOLUCIONADO(1, 'MARZO','BALANCE');
CALL SQL_EN_LLAMAS.CASE03.MRA_CALCULAR_COMPRAS_EVOLUCIONADO(1, 'MARZO','TOTALRETIRADO');
CALL SQL_EN_LLAMAS.CASE03.MRA_CALCULAR_COMPRAS_EVOLUCIONADO(1, 'MARZO','TOTALCOMPRAS');
CALL SQL_EN_LLAMAS.CASE03.MRA_CALCULAR_COMPRAS_EVOLUCIONADO(1, 'MARZO','TOTALDEPOSITADO');
